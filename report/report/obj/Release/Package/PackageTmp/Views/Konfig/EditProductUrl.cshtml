@model report.Models.ProductUrl

@using (Html.BeginForm("EditProductUrl", "Konfig", FormMethod.Post))
{
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <h4>Путь к ордеру</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.take, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.take, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.take, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.by, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.by, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.by, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>CheakPrise</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CheakPrise.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CheakPrise.take, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheakPrise.take, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheakPrise.take, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CheakPrise.by, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheakPrise.by, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheakPrise.by, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CheakPrise.value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheakPrise.value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheakPrise.value, "", new { @class = "text-danger" })
            </div>

            <h4>Availability</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Availability.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Availability.take, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Availability.take, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Availability.take, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Availability.by, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Availability.by, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Availability.by, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Availability.value, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Availability.value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Availability.value, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Availability.expression, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Availability.expression, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Availability.expression, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
